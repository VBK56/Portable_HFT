# Generated by Django 5.2.2 on 2025-08-16 17:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('investments', '0012_portfolio_alter_transaction_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('critical_count', models.IntegerField(default=0)),
                ('high_count', models.IntegerField(default=0)),
                ('medium_count', models.IntegerField(default=0)),
                ('low_count', models.IntegerField(default=0)),
                ('info_count', models.IntegerField(default=0)),
                ('new_count', models.IntegerField(default=0)),
                ('acknowledged_count', models.IntegerField(default=0)),
                ('resolved_count', models.IntegerField(default=0)),
                ('dismissed_count', models.IntegerField(default=0)),
                ('avg_response_time', models.FloatField(blank=True, help_text='Среднее время реакции в часах', null=True)),
                ('avg_resolution_time', models.FloatField(blank=True, help_text='Среднее время решения в часах', null=True)),
                ('top_projects', models.JSONField(blank=True, default=list, help_text='Топ проектов по количеству алертов')),
                ('top_types', models.JSONField(blank=True, default=list, help_text='Топ типов алертов')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Alert Statistics',
                'verbose_name_plural': 'Alert Statistics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AlertType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('IRR_GAP', 'IRR Gap Alert'), ('NAV_DROP', 'NAV Drop Alert'), ('NPV_NEGATIVE', 'NPV Negative Alert'), ('DATA_QUALITY', 'Data Quality Alert'), ('TARGET_MISS', 'Target Miss Alert'), ('DRAWDOWN', 'Drawdown Alert'), ('SHARPE_DECLINE', 'Sharpe Ratio Decline'), ('DISTRIBUTION', 'New Distribution'), ('DATE_REMINDER', 'Important Date Reminder'), ('PORTFOLIO_RISK', 'Portfolio Risk Alert'), ('NO_UPDATE', 'Missing Update Alert'), ('PERFORMANCE', 'Performance Alert')], max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('default_severity', models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low'), ('INFO', 'Info')], default='MEDIUM', max_length=20)),
                ('check_frequency', models.IntegerField(default=1440, help_text='Частота проверки в минутах')),
                ('is_active', models.BooleanField(default=True)),
                ('email_template', models.TextField(blank=True, help_text='Шаблон email уведомления')),
                ('threshold_config', models.JSONField(blank=True, default=dict, help_text='JSON конфигурация порогов для данного типа алерта')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Alert Type',
                'verbose_name_plural': 'Alert Types',
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='mirr_finance_rate',
            field=models.FloatField(default=0.08, help_text='Стоимость капитала = USD инфляция (3%) + премия за риск (5%) = 8%'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='mirr_reinvest_rate',
            field=models.FloatField(default=0.06, help_text='Ставка реинвестирования = USD инфляция (3%) + мин. премия (3%) = 6%'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='transaction_type',
            field=models.CharField(choices=[('Investment', 'Investment'), ('Return', 'Return'), ('NAV', 'NAV Update')], max_length=20),
        ),
        migrations.CreateModel(
            name='AlertSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('email_frequency', models.CharField(choices=[('IMMEDIATE', 'Immediate'), ('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly')], default='IMMEDIATE', max_length=20)),
                ('email_digest_time', models.TimeField(blank=True, help_text='Время отправки дайджеста', null=True)),
                ('push_enabled', models.BooleanField(default=False)),
                ('push_token', models.TextField(blank=True, help_text='FCM/APNs токен для push уведомлений')),
                ('min_severity', models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low'), ('INFO', 'Info')], default='LOW', help_text='Минимальный уровень важности для уведомлений', max_length=20)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('weekend_notifications', models.BooleanField(default=False)),
                ('vacation_mode', models.BooleanField(default=False)),
                ('vacation_mode_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscribed_projects', models.ManyToManyField(blank=True, related_name='alert_subscribers', to='investments.project')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='alert_settings', to=settings.AUTH_USER_MODEL)),
                ('subscribed_types', models.ManyToManyField(blank=True, related_name='subscribers', to='investments.alerttype')),
            ],
            options={
                'verbose_name': 'Alert Settings',
                'verbose_name_plural': 'Alert Settings',
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('condition_type', models.CharField(choices=[('THRESHOLD', 'Threshold'), ('CHANGE', 'Change'), ('TREND', 'Trend'), ('COMPARISON', 'Comparison'), ('TIME_BASED', 'Time Based'), ('CUSTOM', 'Custom')], max_length=50)),
                ('metric_field', models.CharField(help_text="Поле модели для проверки (например, 'irr', 'nav')", max_length=100)),
                ('operator', models.CharField(choices=[('GT', 'Greater Than'), ('GTE', 'Greater Than or Equal'), ('LT', 'Less Than'), ('LTE', 'Less Than or Equal'), ('EQ', 'Equal'), ('NEQ', 'Not Equal'), ('CHANGE_GT', 'Change Greater Than'), ('CHANGE_LT', 'Change Less Than')], max_length=20)),
                ('threshold_value', models.FloatField(blank=True, help_text='Пороговое значение для сравнения', null=True)),
                ('lookback_days', models.IntegerField(default=1, help_text='Период для анализа изменений (дни)')),
                ('min_occurrences', models.IntegerField(default=1, help_text='Минимальное количество срабатываний для создания алерта')),
                ('severity_override', models.CharField(blank=True, choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low'), ('INFO', 'Info')], help_text='Переопределить severity для этого правила', max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('applies_to_all_projects', models.BooleanField(default=True)),
                ('custom_condition', models.TextField(blank=True, help_text='Python код для проверки условия (опционально)')),
                ('check_schedule', models.CharField(default='0 */1 * * *', help_text='Cron expression для расписания проверок', max_length=100)),
                ('last_checked', models.DateTimeField(blank=True, null=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('trigger_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('specific_projects', models.ManyToManyField(blank=True, related_name='alert_rules', to='investments.project')),
                ('alert_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='investments.alerttype')),
            ],
            options={
                'verbose_name': 'Alert Rule',
                'verbose_name_plural': 'Alert Rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.CharField(choices=[('CRITICAL', 'Critical'), ('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low'), ('INFO', 'Info')], db_index=True, default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('ACKNOWLEDGED', 'Acknowledged'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('DISMISSED', 'Dismissed'), ('ESCALATED', 'Escalated')], db_index=True, default='NEW', max_length=20)),
                ('title', models.CharField(max_length=300)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict, help_text='Дополнительные данные алерта в JSON')),
                ('metric_value', models.FloatField(blank=True, help_text='Числовое значение метрики, вызвавшей алерт', null=True)),
                ('threshold_value', models.FloatField(blank=True, help_text='Пороговое значение', null=True)),
                ('deviation', models.FloatField(blank=True, help_text='Отклонение от нормы в %', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('escalated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(default='System', help_text='Кто или что создало алерт', max_length=100)),
                ('resolution_notes', models.TextField(blank=True, help_text='Заметки о решении проблемы')),
                ('actions_taken', models.JSONField(blank=True, default=list, help_text='Список предпринятых действий')),
                ('email_sent', models.BooleanField(default=False)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('push_sent', models.BooleanField(default=False)),
                ('push_sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False, help_text='Повторяющийся алерт')),
                ('recurrence_count', models.IntegerField(default=0, help_text='Количество повторений')),
                ('last_occurrence', models.DateTimeField(blank=True, null=True)),
                ('alert_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_alerts', to='investments.alerttype')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_alerts', to=settings.AUTH_USER_MODEL)),
                ('parent_alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_alerts', to='investments.projectalert')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='investments.project')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project Alert',
                'verbose_name_plural': 'Project Alerts',
                'ordering': ['-created_at', '-severity'],
            },
        ),
        migrations.CreateModel(
            name='AlertLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATED', 'Alert Created'), ('ACKNOWLEDGED', 'Alert Acknowledged'), ('ASSIGNED', 'Alert Assigned'), ('ESCALATED', 'Alert Escalated'), ('RESOLVED', 'Alert Resolved'), ('DISMISSED', 'Alert Dismissed'), ('EMAIL_SENT', 'Email Sent'), ('PUSH_SENT', 'Push Sent'), ('COMMENT_ADDED', 'Comment Added'), ('STATUS_CHANGED', 'Status Changed'), ('SEVERITY_CHANGED', 'Severity Changed')], max_length=50)),
                ('details', models.TextField(blank=True)),
                ('old_value', models.CharField(blank=True, max_length=255)),
                ('new_value', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='investments.projectalert')),
            ],
            options={
                'verbose_name': 'Alert Log',
                'verbose_name_plural': 'Alert Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='projectalert',
            index=models.Index(fields=['-created_at', 'status'], name='investments_created_3d3d37_idx'),
        ),
        migrations.AddIndex(
            model_name='projectalert',
            index=models.Index(fields=['project', '-created_at'], name='investments_project_d444f8_idx'),
        ),
        migrations.AddIndex(
            model_name='projectalert',
            index=models.Index(fields=['severity', 'status'], name='investments_severit_bbf0d0_idx'),
        ),
    ]
