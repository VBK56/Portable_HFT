// static/admin/js/transaction_actions.js
// –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏

(function($) {
    $(document).ready(function() {
        
        console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
        setTimeout(function() {
            initializeTransactionActions();
        }, 1500);
        
        function initializeTransactionActions() {
            console.log('üî• –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–µ–π—Å—Ç–≤–∏–π...');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
            bindActionButtons();
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º readonly –ø–æ–ª—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
            setupReadonlyFields();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
            setTimeout(function() {
                addCalendarButtons();
            }, 500);
        }
        
        function bindActionButtons() {
            // –°–Ω–∏–º–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
            $(document).off('click.transactionActions');
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            $(document).on('click.transactionActions', '.django-btn-edit', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                const transactionId = $(this).data('id');
                const button = $(this);
                
                console.log('‚úèÔ∏è –ö–ª–∏–∫ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è ID:', transactionId);
                toggleEditMode(transactionId, button);
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
            $(document).on('click.transactionActions', '.django-btn-delete', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                const transactionId = $(this).data('id');
                const button = $(this);
                
                console.log('üóëÔ∏è –ö–ª–∏–∫ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–ª—è ID:', transactionId);
                softDeleteTransaction(transactionId, button);
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
            $(document).on('click.transactionActions', '.django-btn-restore', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                const button = $(this);
                const row = button.closest('tr');
                
                console.log('‚Ü∂ –ö–ª–∏–∫ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ');
                restoreTransaction(row, button);
            });
        }
        
        function toggleEditMode(transactionId, button) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            const originalContent = button.html();
            button.html('‚è≥').prop('disabled', true);
            
            // AJAX –∑–∞–ø—Ä–æ—Å –∫ Django
            $.ajax({
                url: `/admin/investments/project/ajax/toggle-edit/${transactionId}/`,
                method: 'POST',
                headers: {
                    'X-CSRFToken': getCSRFToken()
                },
                success: function(response) {
                    if (response.status === 'success') {
                        const row = button.closest('tr');
                        
                        if (response.mode === 'editable') {
                            // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                            makeRowEditable(row);
                            button.html('üíæ').attr('title', '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');
                            showMessage(response.message, 'success');
                        } else {
                            // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏—è
                            makeRowReadonly(row);
                            button.html('‚úèÔ∏è').attr('title', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å');
                            showMessage(response.message, 'info');
                        }
                    } else {
                        showMessage('–û—à–∏–±–∫–∞: ' + response.message, 'error');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('AJAX Error:', error);
                    showMessage('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + error, 'error');
                },
                complete: function() {
                    button.prop('disabled', false);
                    if (button.html() === '‚è≥') {
                        button.html(originalContent);
                    }
                }
            });
        }
        
        function softDeleteTransaction(transactionId, button) {
            if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é?\n\n–î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º—ã.')) {
                return;
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            const originalContent = button.html();
            button.html('‚è≥').prop('disabled', true);
            
            // AJAX –∑–∞–ø—Ä–æ—Å –∫ Django
            $.ajax({
                url: `/admin/investments/project/ajax/soft-delete/${transactionId}/`,
                method: 'POST',
                headers: {
                    'X-CSRFToken': getCSRFToken()
                },
                success: function(response) {
                    if (response.status === 'success') {
                        const row = button.closest('tr');
                        markRowAsDeleted(row, button);
                        showMessage(response.message, 'warning');
                    } else {
                        showMessage('–û—à–∏–±–∫–∞: ' + response.message, 'error');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('AJAX Error:', error);
                    showMessage('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + error, 'error');
                },
                complete: function() {
                    button.prop('disabled', false);
                    if (button.html() === '‚è≥') {
                        button.html(originalContent);
                    }
                }
            });
        }
        
        function restoreTransaction(row, button) {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É
            row.removeClass('deleted-row');
            row.find('td').css({
                'opacity': '1',
                'text-decoration': 'none',
                'background-color': ''
            });
            
            // –í–∫–ª—é—á–∞–µ–º –ø–æ–ª—è –æ–±—Ä–∞—Ç–Ω–æ
            row.find('input, select').not('[name$="-DELETE"], [name$="-ORDER"]').prop('disabled', false);
            
            // –£–±–∏—Ä–∞–µ–º –≥–∞–ª–æ—á–∫—É DELETE
            const deleteCheckbox = row.find('input[name$="-DELETE"]');
            if (deleteCheckbox.length > 0) {
                deleteCheckbox.prop('checked', false);
            }
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
            const editBtn = row.find('.django-btn-edit');
            
            editBtn.show();
            button.html('üóëÔ∏è').attr('title', '–£–¥–∞–ª–∏—Ç—å').removeClass('django-btn-restore').addClass('django-btn-delete');
            
            showMessage('–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', 'info');
        }
        
        function makeRowEditable(row) {
            row.find('input[type="text"], input[type="number"], input[type="date"], select').each(function() {
                const field = $(this);
                
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –ø–æ–ª—è –∏ –ø–æ–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
                if (field.attr('name') && 
                    !field.attr('name').includes('DELETE') && 
                    !field.attr('name').includes('ORDER') &&
                    !field.closest('.transaction-actions').length) {
                    
                    field.prop('readonly', false);
                    field.prop('disabled', false);
                    field.removeClass('readonly-field');
                    field.addClass('editable-field');
                }
            });
            
            row.removeClass('readonly-row').addClass('editable-row');
        }
        
        function makeRowReadonly(row) {
            row.find('input[type="text"], input[type="number"], input[type="date"], select').each(function() {
                const field = $(this);
                
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ –ø–æ–ª—è –∏ –ø–æ–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
                if (field.attr('name') && 
                    !field.attr('name').includes('DELETE') && 
                    !field.attr('name').includes('ORDER') &&
                    !field.closest('.transaction-actions').length) {
                    
                    field.prop('readonly', true);
                    field.removeClass('editable-field');
                    field.addClass('readonly-field');
                }
            });
            
            row.removeClass('editable-row').addClass('readonly-row');
        }
        
        function markRowAsDeleted(row, button) {
            row.addClass('deleted-row');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã —É–¥–∞–ª–µ–Ω–∏—è
            row.find('td').css({
                'opacity': '0.6',
                'text-decoration': 'line-through',
                'background-color': '#f8d7da'
            });
            
            // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –ø–æ–ª—è
            row.find('input, select').not('[name$="-DELETE"], [name$="-ORDER"]').prop('disabled', true);
            
            // –ò—â–µ–º –∏ –æ—Ç–º–µ—á–∞–µ–º checkbox DELETE –µ—Å–ª–∏ –µ—Å—Ç—å
            const deleteCheckbox = row.find('input[name$="-DELETE"]');
            if (deleteCheckbox.length > 0) {
                deleteCheckbox.prop('checked', true);
            }
            
            // –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫–∏
            const editBtn = row.find('.django-btn-edit');
            
            editBtn.hide();
            button.html('‚Ü∂').attr('title', '–û—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ').removeClass('django-btn-delete').addClass('django-btn-restore');
        }
        
        function setupReadonlyFields() {
            // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –¥–µ–ª–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è readonly
            $('.inline-group table tbody tr').each(function() {
                const row = $(this);
                
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–æ—Ä–º—ã –∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
                if (!row.hasClass('empty-form') && !row.hasClass('readonly-row') && 
                    row.find('input[type="text"], input[type="date"], select').length > 0) {
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–æ–∫–µ
                    const hasData = row.find('input[type="text"], input[type="date"], select').filter(function() {
                        return $(this).val() && $(this).val().trim() !== '';
                    }).length > 0;
                    
                    if (hasData) {
                        makeRowReadonly(row);
                    }
                }
            });
        }
        
        function addCalendarButtons() {
            console.log('üìÖ –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
            
            // –ù–∞—Ö–æ–¥–∏–º –¢–û–õ–¨–ö–û –ø–æ–ª—è –¥–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
            $('.inline-group table tbody tr').each(function() {
                const row = $(this);
                
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–æ—Ä–º—ã –∏ —à–∞–±–ª–æ–Ω—ã
                if (row.hasClass('empty-form') || row.find('input[name*="__prefix__"]').length > 0) {
                    return;
                }
                
                // –ò—â–µ–º –ø–æ–ª–µ –¥–∞—Ç—ã –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ
                const dateField = row.find('input[name*="date"]:not([name*="DELETE"])').first();
                
                if (dateField.length > 0 && dateField.next('.date-shortcuts').length === 0) {
                    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
                    const shortcuts = $(`
                        <span class="date-shortcuts" style="margin-left: 5px;">
                            <button type="button" class="today-btn" style="
                                font-size: 10px; padding: 2px 4px; background: #2196F3; 
                                color: white; border: none; border-radius: 2px; margin: 0 1px;
                                cursor: pointer; font-weight: bold;
                            ">T</button>
                            <button type="button" class="cal-btn" style="
                                font-size: 10px; padding: 2px 4px; background: #4CAF50; 
                                color: white; border: none; border-radius: 2px; margin: 0 1px;
                                cursor: pointer; font-weight: bold;
                            ">C</button>
                        </span>
                    `);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –ø–æ–ª—è
                    dateField.after(shortcuts);
                    
                    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ Today
                    shortcuts.find('.today-btn').click(function(e) {
                        e.preventDefault();
                        const today = new Date();
                        const dateString = today.getFullYear() + '-' + 
                            String(today.getMonth() + 1).padStart(2, '0') + '-' + 
                            String(today.getDate()).padStart(2, '0');
                        dateField.val(dateString).trigger('change');
                        console.log('üìÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞:', dateString);
                    });
                    
                    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ Calendar
                    shortcuts.find('.cal-btn').click(function(e) {
                        e.preventDefault();
                        dateField.focus();
                        setTimeout(function() {
                            if (dateField[0].showPicker) {
                                dateField[0].showPicker();
                            } else {
                                dateField[0].click();
                            }
                        }, 100);
                        console.log('üìÖ –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –ø–æ–ª—è:', dateField.attr('name'));
                    });
                    
                    console.log('üìÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', dateField.attr('name'));
                }
            });
        }
        
        function getCSRFToken() {
            // –ò—â–µ–º CSRF token –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
            return $('[name=csrfmiddlewaretoken]').val() || 
                   $('meta[name=csrf-token]').attr('content') ||
                   document.querySelector('[name=csrfmiddlewaretoken]')?.value ||
                   window.csrf_token;
        }
        
        function showMessage(message, type = 'info') {
            // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            $('.django-message').remove();
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
            const colors = {
                'success': { bg: '#d4edda', border: '#c3e6cb', color: '#155724' },
                'error': { bg: '#f8d7da', border: '#f5c6cb', color: '#721c24' },
                'warning': { bg: '#fff3cd', border: '#ffeaa7', color: '#856404' },
                'info': { bg: '#d1ecf1', border: '#bee5eb', color: '#0c5460' }
            };
            
            const style = colors[type] || colors['info'];
            
            // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å—Ç–∏–ª–µ –≤–∞—à–µ–≥–æ –¥–∏–∑–∞–π–Ω–∞
            const messageDiv = $(`
                <div class="django-message" style="
                    position: fixed;
                    top: 120px;
                    right: 20px;
                    z-index: 10000;
                    padding: 12px 20px;
                    border-radius: 6px;
                    background: ${style.bg};
                    border: 1px solid ${style.border};
                    color: ${style.color};
                    max-width: 350px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    font-family: system-ui, -apple-system, Arial, sans-serif;
                    font-size: 13px;
                    line-height: 1.4;
                ">
                    <strong>${type.charAt(0).toUpperCase() + type.slice(1)}:</strong> ${message}
                    <button type="button" style="
                        float: right;
                        background: none;
                        border: none;
                        font-size: 16px;
                        cursor: pointer;
                        color: inherit;
                        margin-left: 10px;
                        margin-top: -2px;
                    " onclick="$(this).parent().fadeOut()">√ó</button>
                </div>
            `);
            
            $('body').append(messageDiv);
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(function() {
                messageDiv.fadeOut(300, function() {
                    $(this).remove();
                });
            }, 4000);
        }
        
        // –°–ª–µ–¥–∏–º –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö inline —Ñ–æ—Ä–º
        $(document).on('formset:added', function(event) {
            console.log('üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è inline —Ñ–æ—Ä–º–∞');
            setTimeout(function() {
                bindActionButtons();
                addCalendarButtons();
            }, 200);
        });
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        $(document).on('click.transactionActions', '.django-btn-edit, .django-btn-delete, .django-btn-restore', function(e) {
            e.preventDefault();
            e.stopPropagation();
        });
        
        // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
        let hasUnsavedChanges = false;
        
        $(document).on('input change', '.editable-field', function() {
            hasUnsavedChanges = true;
        });
        
        $(document).on('submit', 'form', function() {
            hasUnsavedChanges = false;
        });
        
        window.addEventListener('beforeunload', function(e) {
            if (hasUnsavedChanges) {
                e.preventDefault();
                e.returnValue = '–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É?';
            }
        });
        
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        
    });
})(django.jQuery || jQuery);